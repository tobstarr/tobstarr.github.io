snippet curl "curl"
curl -SsfLO ${0}
endsnippet

snippet go
RUN apt-get install -y curl build-essential git-core bzw mercurial

RUN mkdir -p /dl
WORKDIR /dl

RUN curl -SsfLO https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gz

WORKDIR /go

RUN tar xfz /dl/go1.4.1.linux-amd64.tar.gz --strip-components 1

RUN mkdir -p /src

ENV GOROOT /go
ENV GOPATH /src
ENV PATH /go/bin:/src/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
${0}
endsnippet

snippet install
RUN apt-get update && apt-get install --no-install-recommends -y ${1} && rm -rf /var/lib/apt/lists/*
${0}
endsnippet

snippet upgrade
RUN apt-get update && apt-get upgrade -y && rm -rf /var/lib/apt/lists/*
${0}
endsnippet

snippet java
RUN apt-get install -y software-properties-common
RUN add-apt-repository ppa:webupd8team/java
RUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
RUN apt-get update
RUN apt-get install -y oracle-java7-installer
RUN update-alternatives --set java /usr/lib/jvm/java-7-oracle/jre/bin/java
${0}
endsnippet
	
snippet mri
RUN apt-get install -y curl build-essential git-core
RUN mkdir -p /dl

RUN apt-get install -y curl build-essential libyaml-dev libxml2-dev libxslt1-dev libreadline-dev libssl-dev zlib1g-dev libffi-dev

# ENV RUBY_VERSION 2.2.0 (needs eventmachine upgrade)
ENV RUBY_VERSION 2.1.5

WORKDIR /dl

RUN curl -SsfLO "http://ftp.ruby-lang.org/pub/ruby/$(echo $RUBY_VERSION | cut -d '.' -f 1-2)/ruby-$RUBY_VERSION.tar.gz"

RUN tar xfz ruby-$RUBY_VERSION.tar.gz

WORKDIR /dl/ruby-$RUBY_VERSION

RUN ./configure --disable-install-doc
RUN make
RUN make install
${0}
endsnippet

snippet curl "Description"
curl -SsfL http://some.url.com ${0}
endsnippet
